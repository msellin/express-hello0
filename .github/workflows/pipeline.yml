name: Build and Test

on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches:
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  node-version: 17

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Setup Node Env & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      ### configure cache
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-${{ env.node-version }}
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: 'npm'

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Run tests
        run: npm test

  deploy-staging:
    if: github.event_name != 'pull_request'
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.11
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: growup-demo
          heroku_email: margus@kofounder.com

  e2e-test:
    if: github.event_name != 'pull_request'
    name: End2end Test
    runs-on: ubuntu-latest
    needs: [ deploy-staging ]
    steps:
      - uses: actions/checkout@v3
      - name: install tap
        run: npm install tap --save-dev
      - name: Run e2e tests
        run: npm run e2e